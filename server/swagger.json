{
  "openapi": "3.0.3",
  "info": {
    "title": "Community Task-and-Help Board API",
    "version": "1.0.0",
    "description": "API documentation for the Community Task-and-Help Board, a Nigerian-local MERN app for posting and claiming local tasks."
  },
  "servers": [
    { "url": "http://localhost:5000/api", "description": "Local server" },
    { "url": "https://your-domain.com/api", "description": "Production server" }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "location": { "type": "string", "enum": ["Lagos", "Abuja", "Ilorin", "Port Harcourt", "Kano", "Ibadan", "Enugu", "Benin City", "Jos", "Ogbomoso", "Oyo", "Abeokuta", "Awka", "Onitsha", "Nnewi", "Ekwulobia", "Obosi", "Ikeja", "Lagos Island", "Lekki", "Surulere", "Badagry", "Minna", "Offa", "Omu-Aran", "Lafiagi", "Patigi", "Bida", "Suleja", "Kontagora", "Zungeru", "Other"] },
          "joinedAt": { "type": "string", "format": "date-time" },
          "role": { "type": "string", "enum": ["user", "admin"] },
          "token": { "type": "string" }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "location": { "type": "string", "enum": ["Lagos", "Abuja", "Ilorin", "Port Harcourt", "Kano", "Ibadan", "Enugu", "Benin City", "Jos", "Ogbomoso", "Oyo", "Abeokuta", "Awka", "Onitsha", "Nnewi", "Ekwulobia", "Obosi", "Ikeja", "Lagos Island", "Lekki", "Surulere", "Badagry", "Minna", "Offa", "Omu-Aran", "Lafiagi", "Patigi", "Bida", "Suleja", "Kontagora", "Zungeru", "Other"] },
          "category": { "type": "string" },
          "status": { "type": "string", "enum": ["open", "claimed", "completed", "cancelled"] },
          "postedBy": { "$ref": "#/components/schemas/User" },
          "claimedBy": { "$ref": "#/components/schemas/User" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "error": { "type": "string" },
          "statusCode": { "type": "integer" }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": { "type": "string" },
                "message": { "type": "string" }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    { "bearerAuth": [] }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password", "location"],
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "minLength": 6 },
                  "location": { "type": "string", "enum": ["Lagos", "Abuja", "Ilorin", "Port Harcourt", "Kano", "Ibadan", "Enugu", "Benin City", "Jos", "Ogbomoso", "Oyo", "Abeokuta", "Awka", "Onitsha", "Nnewi", "Ekwulobia", "Obosi", "Ikeja", "Lagos Island", "Lekki", "Surulere", "Badagry", "Minna", "Offa", "Omu-Aran", "Lafiagi", "Patigi", "Bida", "Suleja", "Kontagora", "Zungeru", "Other"] }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or email in use",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ValidationError" } }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Current user info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Create a new task",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title", "description", "location", "category"],
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "location": { "type": "string", "enum": ["Lagos", "Abuja", "Ilorin", "Port Harcourt", "Kano", "Ibadan", "Enugu", "Benin City", "Jos", "Ogbomoso", "Oyo", "Abeokuta", "Awka", "Onitsha", "Nnewi", "Ekwulobia", "Obosi", "Ikeja", "Lagos Island", "Lekki", "Surulere", "Badagry", "Minna", "Offa", "Omu-Aran", "Lafiagi", "Patigi", "Bida", "Suleja", "Kontagora", "Zungeru", "Other"] },
                  "category": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "task": { "$ref": "#/components/schemas/Task" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ValidationError" } }
            }
          }
        }
      },
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks",
        "responses": {
          "200": {
            "description": "List of all tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "count": { "type": "integer" },
                    "tasks": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Task" }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get a single task",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Task found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "task": { "$ref": "#/components/schemas/Task" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Update a task (owner only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "location": { "type": "string", "enum": ["Lagos", "Abuja", "Ilorin", "Port Harcourt", "Kano", "Ibadan", "Enugu", "Benin City", "Jos", "Ogbomoso", "Oyo", "Abeokuta", "Awka", "Onitsha", "Nnewi", "Ekwulobia", "Obosi", "Ikeja", "Lagos Island", "Lekki", "Surulere", "Badagry", "Minna", "Offa", "Omu-Aran", "Lafiagi", "Patigi", "Bida", "Suleja", "Kontagora", "Zungeru", "Other"] },
                  "category": { "type": "string" },
                  "status": { "type": "string", "enum": ["open", "claimed", "completed", "cancelled"] }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "task": { "$ref": "#/components/schemas/Task" }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized (not owner)",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete a task (owner only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Task deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized (not owner)",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          }
        }
      }
    },
    "/tasks/{id}/claim": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Claim a task",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Task claimed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "task": { "$ref": "#/components/schemas/Task" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Task not open or claiming own task",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get my profile and stats",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User profile and stats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "user": { "$ref": "#/components/schemas/User" },
                    "postedTasks": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Task" }
                    },
                    "claimedTasks": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Task" }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          }
        }
      }
    },
    "/users/{id}/tasks": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user's posted and claimed tasks",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "User's posted and claimed tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "postedTasks": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Task" }
                    },
                    "claimedTasks": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Task" }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me/profile-picture": {
      "post": {
        "tags": ["Users"],
        "summary": "Upload profile picture",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "profilePicture": {
                    "type": "string",
                    "format": "binary",
                    "description": "Profile picture image file"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile picture uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" },
                    "imageUrl": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No file uploaded or invalid file",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    }
  }
} 